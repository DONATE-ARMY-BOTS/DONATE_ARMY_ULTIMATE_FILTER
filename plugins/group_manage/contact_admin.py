# This is a simple code from MrTG brain üß†.
# sending method for users, eg:- /admin hi.
# reply method for admins only, eg:- !ans 2674364 hello 
# In reply method !ans is command, {user_id} of sended person, {ur_message} your meessage for reply to use

from pyrogram import Client, filters
from pyrogram.types import Message
from info import ADMINS, LOG_CHANNEL, SUPPORT_CHAT_ID
import asyncio

@Client.on_message(filters.private & filters.command("admin"))
async def forward_message_to_group(client, message):
 try:
    text = message.text.split(" ", 1)[1] 
    user_id = message.from_user.id
    name = message.from_user.mention
    await message.forward(LOG_CHANNEL)
    await client.send_message(LOG_CHANNEL, text=f"·¥Ä …¥·¥á·¥° ·¥ç·¥áss·¥Ä…¢·¥á “ì Ä·¥è·¥ç {name}\n\n·¥úÍú±·¥á Ä-…™·¥Ö= <code>{user_id}</code>")
    await client.send_message(LOG_CHANNEL, text=f"…™“ì  è·¥è·¥ú ·¥°·¥Ä…¥…¥·¥Ä ·¥õ·¥è  Ä·¥á·¥ò ü è ·¥õ ú·¥á…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö\n\n<code>!ans {user_id} ur_messaage</code>")
    success_message = await message.reply_text("M·¥áss·¥Ä…¢·¥á “ì·¥è Ä·¥°·¥Ä Ä·¥Ö·¥á·¥Ö ·¥õ·¥è ·¥õ ú·¥á ·¥Ä·¥Ö·¥ç…™…¥s. ·¥°·¥Ä…™·¥õ “ì·¥è Ä ·¥õ ú·¥á  Ä·¥á·¥ò ü è.")

 except Exception as e:
    await message.reply_text(f"error{e}")

@Client.on_message(filters.command("ans", "!") & filters.user(ADMINS) & filters.chat(int(SUPPORT_CHAT_ID)))
async def reply_to_forwarded_message(client, message:Message):
 try: 
    mrtg = message.text.split(" ", 2)
    user_id = int(mrtg[1])
    reply_text = mrtg[2]
    await client.send_message(user_id, text=f"R·¥á·¥ò ü è “ì Ä·¥è·¥ç ·¥ç è ·¥Ä·¥Ö·¥ç…™…¥")
    await client.send_message(user_id, text=f"<code>{reply_text}</code>")
    await message.reply_text(f"·¥ç·¥áss·¥Ä…¢·¥á s·¥á…¥·¥õ s·¥ú·¥Ñ·¥áss“ì·¥ú ü ü è ·¥õ·¥è <a href='tg://user?id={user_id}'><b>·¥ús·¥á Ä</b></a>")
 except Exception as e:
    await message.reply_text(f"error{e}")
